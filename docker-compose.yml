version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: messages_db
    ports:
      - "5433:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('amqplib').connect('amqp://guest:guest@rabbitmq')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  consumer1:
    build:
      context: ./consumer1
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "postgres", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  consumer2:
    build:
      context: ./consumer2
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "postgres", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
